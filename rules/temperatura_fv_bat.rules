
var equalTreshold = 0.25  //dont take into account differences of more than 0.25ÂºC
                            //if need a strict number, use 0

var tempBatObjectiu = 20.0
var tempBatHisteresi = 1.5

rule "Encesa auto ventilador bateries temperatura"
when
    
    Item BateriesTemperatura received update 
    //Item BateriesTemperatura received command
then
    var ventiladorNomesTemp = VentiladorBateriesNomesTemp
    var temp=(BateriesTemperatura.state as Number).floatValue
    var tempExt=(ExteriorArmarisTemperatura.state as Number).floatValue
    var tempObj = tempBatObjectiu

    logDebug("temperatura_fv_bat.rules", "Encesa auto vent. bat. temp: "+
        temp+" vs tempExt: "+tempExt+" vs tempObj: "+tempObj) 

    var diffExt = temp - tempExt
    var diffObj = temp - tempObj
    if(diffExt * diffObj > 0 && diffExt>equalTreshold && diffObj>equalTreshold){
        logDebug("temperatura_fv_bat.rules", "Should switch on the fan, as the diff is in the same direction")
        ventiladorNomesTemp.sendCommand(ON)
    }else{
        logDebug("temperatura_fv_bat.rules", "Should switch off the fan, as the diff is in the opposite direction or too small")
        ventiladorNomesTemp.sendCommand(OFF)
    }

end

rule "Encesa auto ventilador bateries histeresi"
when
    Item VentiladorBateriesNomesTemp received command
then
    var ventiladorControlPotencia = VentiladorBateriesControlPotencia
    var temp = (BateriesTemperatura.state as Number).floatValue
    var tempExt=(ExteriorArmarisTemperatura.state as Number).floatValue
    var tempObj = tempBatObjectiu
    var tempHist = tempBatHisteresi

    var fanOn = VentiladorBateriesProxy.state==ON
    logDebug("temperatura_fv_bat.rules", "ventiladorNomesTemp received command, checking histeresi: hist:"+tempHist+", fanOn: "+fanOn+", commandOn: "+(receivedCommand==ON) ) 

    //if the fan is currently on
    //  and the command is to switch on, forward the on command, to check for power consumption
    //if the fan is on, and the command is off, forward the off command
    //if the fan is off and the command is off, forward the off command, though is not necessary
    //if the fan is off, and the command is on, check that the diff 
    //  temps are greater than histeresis
    if(!fanOn && receivedCommand==ON){
        var tempDiff = temp - tempObj
        var tempDiffExt = temp - tempExt
        logInfo("temperatura_fv_elect.rules", "the difference is toObj: "+tempDiff+
                "toExt: "+tempDiffExt)
        if(tempDiff<0){
            tempDiff = -tempDiff
        }
        if(tempDiffExt<0){
            tempDiffExt = -temptempDiffExtDiff
        }
        if(tempDiffExt<tempDiff){
            tempDiff = tempDiffExt
        }
        if(tempDiff>tempHist){
            ventiladorControlPotencia.sendCommand(ON)
            logInfo("temperatura_fv_bat.rules", "histeresis overpassed: tempDiff ("+
                tempDiff+") > tempHist("+tempHist+")")
        }else{
            logInfo("temperatura_fv_bat.rules", "histeresis still applies so dont turn on: tempDiff ("+
                tempDiff+") < tempHist("+tempHist+")")
        }

    }else{
        logDebug("temperatura_fv_bat.rules", "Histeresis does not apply now, forwarding command")
        if(receivedCommand==ON){
            ventiladorControlPotencia.sendCommand(ON)
        }else{
            ventiladorControlPotencia.sendCommand(OFF)
        }
    }
    

end

rule "Encesa auto ventilador bateries potencia"
when
    Item VentiladorBateriesControlPotencia received command
then
    var ventilador = VentiladorBateriesProxy
    val gestioVentilador = VentiladorGestioElect.state

    if(receivedCommand==ON) {
        if(gestioVentilador=="autotemp"){
            ventilador.sendCommand(ON)
            logInfo("temperatura_fv_bat.rules", "turning the Ventilador Bateries ON, as the mode is nto save batteries: ")
        }else{
            var unusedPower=(SunnyBoy_Pot_Rebutjada.state as DecimalType).intValue
            if(unusedPower>0){
                ventilador.sendCommand(ON)
                logInfo("temperatura_fv_bat.rules", "turning the Ventilador Bateries ON, as there is unused pwr: "+unusedPower)
            }else{
                ventilador.sendCommand(OFF)
                logInfo("temperatura_fv_bat.rules", "NOT turning the Ventilador Bateries ON, as there is not unused pwr")
            }
        }
    }else{
        logInfo("temperatura_fv_bat.rules", "turning the Ventilador Bateries OFF")
        ventilador.sendCommand(OFF)
    }

end